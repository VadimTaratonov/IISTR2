import ru.taratonov.iistr2.model.Transfusion
import ru.taratonov.iistr2.model.BloodType
import ru.taratonov.iistr2.service.BloodServiceImpl

global ru.taratonov.iistr2.model.BloodResultTransfusion bloodResultTransfusion

dialect  "mvel"

rule "Negative result donor blood O"
    when
        Transfusion(donorBloodType == BloodType.O && recipientBloodType != BloodType.O)
    then
        bloodResultTransfusion.setResult(BloodServiceImpl.negativeResult);
end

rule "Positive result donor blood O"
    when
        Transfusion(donorBloodType == BloodType.O && recipientBloodType == BloodType.O)
    then
        bloodResultTransfusion.setResult(BloodServiceImpl.positiveResult);
end

rule "Negative result donor blood A"
    when
        Transfusion(donorBloodType == BloodType.A && (recipientBloodType == BloodType.B || recipientBloodType == BloodType.AB))
    then
        bloodResultTransfusion.setResult(BloodServiceImpl.negativeResult);
end

rule "Positive result donor blood A"
    when
        Transfusion(donorBloodType == BloodType.A && (recipientBloodType == BloodType.A || recipientBloodType == BloodType.O))
    then
        bloodResultTransfusion.setResult(BloodServiceImpl.positiveResult);
end

rule "Negative result donor blood B"
    when
        Transfusion(donorBloodType == BloodType.B && (recipientBloodType == BloodType.A || recipientBloodType == BloodType.AB))
    then
        bloodResultTransfusion.setResult(BloodServiceImpl.negativeResult);
end

rule "Positive result donor blood B"
    when
        Transfusion(donorBloodType == BloodType.B && (recipientBloodType == BloodType.B || recipientBloodType == BloodType.O))
    then
        bloodResultTransfusion.setResult(BloodServiceImpl.positiveResult);
end

rule "Positive result donor blood AB"
    when
        Transfusion(donorBloodType == BloodType.AB)
    then
        bloodResultTransfusion.setResult(BloodServiceImpl.positiveResult);
end